package module3;

import java.util.Arrays;

public class Main {

	public static void main(String[] args) {

		// Задание 1
		// Создать новый проект на GitHub и на локальном компе
		// Написать программу которая:
		// 1. на вход через консоль принимает размер массива
		// 2. на вход через консоль принимает массив чисел
		// 3. найти минимальное число в массиве и вывести в консоль (без
		// использования сортировки)
		// 4. найти максимальное число в массиве и вывести в консоль (без
		// использования сортировки)
		// 5. посчитать кол-во повторений числа 5 и вывести в консоль
		// 6. вывести в консоль отсортированный массив

		// int[] arr = Arrays.initiation();
		// Arrays.min(arr);
		// Arrays.max(arr);
		// Arrays.count(5, arr);
		// System.out.println(arr.length);
		// Arrays.show(Arrays.sort(arr));

		// Задание 2 (дополнительное)
		// Добавить к программе из задания 1 следующее:
		// 7. вывести в консоль максимальное кол-во повторений чисел в массиве
		// пример 1:
		// массив 1, 2, 3, 4, 1, 6.
		// Ответ - 2. Так как число 1 повторяется 2 раза
		//
		// пример 2:
		// массив 1, 1, 1, 4, 6, 6.
		// Ответ - 3. Так как число 1 повторяется 3 раза. А число 6 повторяется
		// 2 раза. Поскольку надо вывести максимум, выводим 3.
		//
		// пример 3:
		// массив 2, 3, 3, 5, 5, 6
		// Ответ - 2. Так как 3 и 5 повторяются по 2 раза, неважно кого из них
		// подсчитывать, цель - вывести максимум. В этом примере максимум
		// повторений чисел является 2 раза.
		//
		// 8. вывести в консоль минимальное кол-во повторений чисел в массиве

		// Arrays.repeatMax(arr);
		// Arrays.repeatMin(arr);

		// практика
		// Задание 1
		// Пользователь вводит 2 числа.
		// Программа сохраняет два числа в две переменных.
		// Первая переменная - А, вторая переменная - B.
		// Необходимо вывести оба числа, в обратное последовательности.
		// Например:
		// A = 123, B = 4246
		// На выходе будет:
		// 321 6424

		// Numers.initiation();
		// Numers.reversal(Numers.getA());
		// Numers.reversal(Numers.getB());

		// Задание 2
		// Программа считывает размер массива А
		// Программа считывает массив А
		//
		// Перевернуть массив (отзеркалить массив) и вывести его в консоль
		//
		// Например:
		// Вход: 1,2,3,10,8,30,5
		// Вывод: 5,30,8,10,3,2,1

		// Arrays.reverse();

		// Задание 3
		// Программа считывает размер массива А
		// Программа считывает массив А
		// Программа считывает размер массива B
		// Программа считывает массив B
		//
		// Необходимо просуммировать i-тый элемент массива А с i-тым элементом
		// массива B.
		// Если i-того элемента нет - считать его нулем. Сохранить результат в
		// массив C
		// Вывести массив - результат всех сумм.

		// Arrays.setIni(Arrays.iniTwo());
		// Arrays.setIniTwo(Arrays.iniTwo());
		// Arrays.show(Arrays.sum(Arrays.getIni(), Arrays.getIniTwo()));

		// Задание 4
		// Программа считывает размер массива А
		// Программа считывает массив А
		// Отсортировать массив по убыванию и вывести в консоль

		// Arrays.show(Arrays.reSort(Arrays.iniTwo()));

		// Задание 5 (дополнительное)
		// Пользователь вводит 2 числа. Ширину и высоту. Необходимо в консоли
		// отрисовать прямоугольник из символов ‘+’.
		//
		// Пример:
		// Ввод: 2 3
		// Вывод:
		// + +
		// + +
		// + +

		// Numers.iniRectangle();
		// Numers.rectangleCrosses(Numers.getWidth(), Numers.getHeight());

		// Задание 6 (дополнительное)
		// Пользователь вводит 2 числа. Ширину и высоту. Необходимо создать
		// массив массивов типа инт. И заполнить его числами от 1000 и выше. При
		// этом крайние элементы полученной матрицы чисел должны быть числами
		// -100.
		// Выведите результат на экран.
		//
		// Пример:
		// Ввод: 
		// Вывод:
		// -100 -100 -100 -100
		// -100 1000 1001 -100
		// -100 1002 1003 -100
		// -100 -100 -100 -100
		
		
		Numers.iniRectangle();
		Numers.show(Numers.hundred( Numers.getWidth(),Numers.getHeight()));

	}

}
